name: Validate and Auto-Merge

on:
  push:
    branches: [ test-main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  validate-and-fix:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript Check
      run: npx tsc --noEmit
    
    - name: ESLint Critical Errors Only
      run: |
        # Run ESLint for ERRORS only (skip warnings)
        npx eslint . --ext .js,.jsx,.ts,.tsx \
          --quiet \
          --fix \
          --max-warnings 999
        # --quiet = only show errors
        # --fix = auto-fix what's possible
        # --max-warnings 999 = ignore warnings
    
    - name: Dependency Version Check
      run: |
        echo "### 📦 Dependency Version Analysis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check for inexact versions
        INEXACT_DEPS=$(grep -E '"[^"]+": *"\^|~' package.json || true)
        if [ ! -z "$INEXACT_DEPS" ]; then
          echo "⚠️ **Found dependencies with inexact versions:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$INEXACT_DEPS" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "💡 Consider pinning these to exact versions for production stability." >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ All dependencies use exact versions" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Log details for debugging
        echo "::warning title=Dependency Versions::Some dependencies use inexact versions. Check the summary for details."
    
    - name: Configure Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
    
    - name: Commit Fixes
      run: |
        git add -A
        if ! git diff --staged --quiet; then
          git commit -m "fix: Auto-fix critical errors [skip ci]"
          git push origin ${{ github.ref_name }}
        else
          echo "No fixes needed"
        fi

  auto-merge:
    needs: validate-and-fix
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/test-main' && success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
    
    - name: Merge test-main to main
      run: |
        git checkout main
        git merge test-main --no-ff -m "chore: Auto-merge from test-main
        
        All validation checks passed"
        git push origin main
    
    - name: Update test-main
      run: |
        git checkout test-main
        git merge main
        git push origin test-main
